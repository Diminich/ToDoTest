{"version":3,"sources":["components/body/body.module.scss","components/body/titleTask/TitleTask.module.scss","app.module.scss","api/api.js","redux/task-reducer.js","components/body/listItem/ListItem.jsx","components/body/titleTask/TitleTask.jsx","components/body/Body.jsx","App.jsx","reportWebVitals.js","redux/redux-store.js","index.js"],"names":["module","exports","instance","axios","create","baseURL","withCredentials","headers","api","get","titleTask","post","title","id","delete","newTitleTask","put","initialState","tasks","GET_TASKS","PUT_TASKS","DELETE_TASKS","SET_TASKS","getTask","getTasks","type","putTask","deleteTask","requestGetTask","dispatch","a","data","taskReducer","state","action","map","t","filter","item","ListItem","index","exchangeItems","useDispatch","useState","setNewTitleTask","refactoredId","setRefactoredId","done","isDone","resultCode","requestDeleteTask","updateTitleTask","requestPutTask","ref","useRef","useDrop","accept","hover","monitor","current","dragIndex","hoverIndex","drop","useDrag","collect","isDragging","drag","className","styles","taskDone","task","draggable","onClick","style","value","autoFocus","onBlur","onChange","e","currentTarget","inputCheckboxInputButton","checked","deleteButton","TitleTask","setTitleTask","error","setError","wrapperTitleTask","wrapperInputErrorMessage","errorInput","inputTitle","buttonAddTitle","trim","taskList","requestAddTask","Body","listToDoes","useSelector","taskPage","useEffect","useCallback","dragCard","update","$splice","ListItems","wrapperBody","wrapperTask","App","wrapperApp","DndProvider","backend","HTML5Backend","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wFACAA,EAAOC,QAAU,CAAC,YAAc,0BAA0B,YAAc,0BAA0B,KAAO,mBAAmB,SAAW,uBAAuB,yBAA2B,uCAAuC,aAAe,6B,mBCA/OD,EAAOC,QAAU,CAAC,iBAAmB,oCAAoC,yBAA2B,4CAA4C,WAAa,8BAA8B,WAAa,8BAA8B,aAAe,gCAAgC,eAAiB,oC,mBCAtSD,EAAOC,QAAU,CAAC,WAAa,0B,+NCCzBC,E,OAAWC,EAAMC,OAAO,CAC1BC,QAAS,+CACTC,iBAAiB,EACjBC,QAAS,CAAC,UAAW,0CAGZC,EAAM,WAEX,OAAON,EAASO,IAAI,gBAFfD,EAAM,SAKHE,GACR,OAAOR,EAASS,KAAK,cAAe,CAACC,MAAOF,KANvCF,EAAM,SASHK,GACR,OAAOX,EAASY,OAAT,sBAA+BD,KAVjCL,EAAM,SAaEK,EAAIE,GACjB,OAAOb,EAASc,IAAT,sBAA4BH,GAAM,CAACD,MAAOG,KCpBrDE,EAAe,CACfC,MAAO,IAGLC,EAAY,YACZC,EAAY,YACZC,EAAe,eACfC,EAAY,YAoCLC,EAAU,SAACC,GAAD,MAAe,CAACC,KAAMN,EAAWK,aAC3CE,EAAU,SAACb,EAAIE,GAAL,MAAuB,CAACU,KAAML,EAAWP,KAAIE,iBACvDY,EAAa,SAACd,GAAD,MAAS,CAACY,KAAMJ,EAAcR,OAW3Ce,EAAiB,WAC1B,8CAAO,WAAOC,GAAP,eAAAC,EAAA,sEACoBtB,IADpB,OACOuB,EADP,OAECF,EAASN,EAAQQ,EAAKA,OAFvB,2CAAP,uDAwBWC,EAxEK,WAAmC,IAAlCC,EAAiC,uDAAzBhB,EAAciB,EAAW,uCAClD,OAAQA,EAAOT,MACX,KAAKN,EACD,OAAO,2BACAc,GADP,IAEIf,MAAOgB,EAAOV,WAGtB,KAAKJ,EACD,OAAO,2BACAa,GADP,IAEIf,MAAOe,EAAMf,MAAMiB,KAAI,SAAAC,GACnB,OAAIA,EAAEvB,KAAOqB,EAAOrB,GAAWuB,EACxB,2BAAIA,GAAX,IAAcxB,MAAOsB,EAAOnB,oBAIxC,KAAKM,EACD,OAAO,2BACAY,GADP,IAEIf,MAAOe,EAAMf,MAAMmB,QAAO,SAAAC,GAAI,OAAIA,EAAKzB,KAAOqB,EAAOrB,QAI7D,KAAKS,EACD,OAAO,2BACAW,GADP,IAEIf,MAAM,YAAKgB,EAAOhB,SAI9B,OAAOe,GCpCEM,EAAW,SAAC,GAAuC,IAAtC1B,EAAqC,EAArCA,GAAID,EAAiC,EAAjCA,MAAO4B,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,cAClCZ,EAAWa,cAD0C,EAEnBC,mBAAS,IAFU,mBAEpD5B,EAFoD,KAEtC6B,EAFsC,OAGnBD,mBAAS,MAHU,mBAGpDE,EAHoD,KAGtCC,EAHsC,OAIpCH,oBAAS,GAJ2B,mBAIpDI,EAJoD,KAI9CC,EAJ8C,KAMrDrB,EAAa,SAACd,GAChBgB,ED6DyB,SAAChB,GAC9B,8CAAO,WAAOgB,GAAP,SAAAC,EAAA,sEACkBtB,EAAeK,GADjC,OAEqB,IAFrB,OACIkB,KACEkB,YACLpB,EAASF,EAAWd,IAHrB,2CAAP,sDC9DaqC,CAAkBrC,KAGzBsC,EAAkB,SAACtC,GACrBgB,EDkDsB,SAAChB,EAAIE,GAC/B,8CAAO,WAAOc,GAAP,iBAAAC,EAAA,sEACkBtB,EAAoBK,EAAIE,GAD1C,gBACIgB,EADJ,EACIA,KACPF,EAASH,EAAQK,IAFd,2CAAP,sDCnDaqB,CAAevC,EAAIE,IAC5Bc,EAASD,KACTkB,EAAgB,OAGdO,EAAMC,iBAAO,MAhBwC,EAiB1CC,YAAQ,CACrBC,OAAQ,WACRC,MAFqB,SAEfnB,EAAMoB,GACR,GAAKL,EAAIM,QAAT,CAGA,IAAMC,EAAYtB,EAAKE,MACjBqB,EAAarB,EACfoB,IAAcC,IAGlBpB,EAAcmB,EAAWC,GACzBvB,EAAKE,MAAQqB,OAZZC,EAjBkD,sBAiC1CC,YAAQ,CACrBzB,KAAM,CAACb,KAAM,WAAYZ,KAAI2B,SAC7BwB,QAAS,SAACN,GAAD,MAAc,CACnBO,WAAYP,EAAQO,iBAHnBC,EAjCkD,oBAwC3D,OADAA,EAAKJ,EAAKT,IAEN,qBAAIA,IAAKa,EAAKJ,EAAKT,IAAOc,UAAWpB,EAAOqB,IAAOC,SAAWD,IAAOE,KAArE,UACI,qBAAcC,WAAW,EAAMC,QAAS,kBAAM1B,EAAgBjC,IAAK4D,MAAO,CAAC,QAAW,OAAQ,WAAc,UAA5G,SACK5D,IAAOgC,EACJ,uBAAO6B,MAAO3D,EAAc4D,WAAW,EAAMC,OAAQ,kBAAMzB,EAAgBtC,IACpEgE,SAAU,SAACC,GAAD,OAAOlC,EAAgBkC,EAAEC,cAAcL,UACtD9D,GAJAC,GAMV,sBAAKsD,UAAWC,IAAOY,yBAAvB,UACI,uBAAOvD,KAAK,WAAWwD,QAASlC,EAAM8B,SAAU,kBAAM7B,GAAQD,MAC9D,wBAAQoB,UAAWC,IAAOc,aAAcV,QAAS,kBAAM7C,EAAWd,IAAlE,sB,kCCxBDsE,EA3BG,WAAO,IAAD,EACcxC,mBAAS,IADvB,mBACbjC,EADa,KACF0E,EADE,OAEMzC,oBAAS,GAFf,mBAEb0C,EAFa,KAENC,EAFM,KAGdzD,EAAWa,cAYjB,OACI,sBAAKyB,UAAWC,IAAOmB,iBAAvB,UACI,sBAAKpB,UAAWC,IAAOoB,yBAAvB,UACI,uBAAOrB,UAAWkB,EAAQjB,IAAOqB,WAAarB,IAAOsB,WAAYhB,MAAOhE,EACjEmE,SAAU,SAACC,GAAD,OAAOM,EAAaN,EAAEC,cAAcL,UACpDW,GAAS,sBAAMZ,MAAO,CAAC,MAAS,OAAvB,iGAEd,wBAAQN,UAAWC,IAAOuB,eAAgBlB,MAAO,CAAC,WAAc,IAAKD,QAjB7D,WACa,KAArB9D,EAAUkF,QACV/D,EFsCkB,SAACnB,GAC3B,8CAAO,WAAOmB,GAAP,iBAAAC,EAAA,sEAC2BtB,EAAeE,GAD1C,qBACIqB,KADJ,SAE4BvB,IAF5B,gBAEUqF,EAFV,EAEI9D,KACPF,EAASN,EAAQsE,IAHd,2CAAP,sDEvCiBC,CAAepF,IACxB0E,EAAa,IACbE,GAAS,IAETA,GAAS,IAWT,0BCUGS,EA7BF,WACT,IAAMlE,EAAWa,cACXsD,EAAaC,aAAY,SAAAhE,GAAK,OAAIA,EAAMiE,SAAShF,SAEvDiF,qBAAU,WACNtE,EAASD,OACV,IAGH,IAAMa,EAAgB2D,uBAAY,SAACxC,EAAWC,GAC1C,IH8BiB3C,EG9BXmF,EAAWL,EAAWpC,GAC5B/B,GH6BiBX,EG7BCoF,IAAON,EAAY,CACjCO,QAAS,CACL,CAAC3C,EAAW,GACZ,CAACC,EAAY,EAAGwC,MH0BI,CAAC5E,KAAMH,EAAWJ,aGvB/C,CAAC8E,IAEEQ,EAAYR,EAAW7D,KAAI,SAACG,EAAME,GAAP,OAAkB,cAAC,EAAD,2BAA4BF,GAA5B,IAAkCE,MAAOA,EAAOC,cAAeA,IAAhDH,EAAKzB,OAEvE,OACI,sBAAKsD,UAAWC,IAAOqC,YAAvB,UACI,cAAC,EAAD,IACA,qBAAKtC,UAAWC,IAAOsC,YAAvB,SAAqCF,Q,gBChBlCG,EAVH,WACR,OACI,qBAAKxC,UAAWC,IAAOwC,WAAvB,SACI,cAACC,EAAA,EAAD,CAAaC,QAASC,IAAtB,SACI,cAAC,EAAD,SCEDC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,eCHVQ,EAAWC,YAAgB,CAC3BxB,SAAUlE,IAKC2F,EAFDC,YAAYH,EAAUI,YAAgBC,MCApDC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACI,cAAC,EAAD,QAEaO,SAASC,eAAe,SAMjDnB,M","file":"static/js/main.3e8ebc03.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperBody\":\"body_wrapperBody__3qt1z\",\"wrapperTask\":\"body_wrapperTask__1mjWT\",\"task\":\"body_task__VnKp5\",\"taskDone\":\"body_taskDone__vTfVp\",\"inputCheckboxInputButton\":\"body_inputCheckboxInputButton__WMJNs\",\"deleteButton\":\"body_deleteButton__2j6R8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperTitleTask\":\"TitleTask_wrapperTitleTask__3gZgc\",\"wrapperInputErrorMessage\":\"TitleTask_wrapperInputErrorMessage__Er3eV\",\"inputTitle\":\"TitleTask_inputTitle__3MQWf\",\"errorInput\":\"TitleTask_errorInput__hlgNC\",\"errorMessage\":\"TitleTask_errorMessage__2s77e\",\"buttonAddTitle\":\"TitleTask_buttonAddTitle__28n0k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperApp\":\"app_wrapperApp__pn1Zb\"};","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.1\",\r\n    withCredentials: true,\r\n    headers: {\"API-KEY\": \"3af6bfa5-65e5-4eec-88f6-fc8f87e12121\"}\r\n});\r\n\r\nexport const api = {\r\n    getTasks () {\r\n        return instance.get(\"/todo-lists\")\r\n    },\r\n\r\n    addNewTask (titleTask) {\r\n        return instance.post(\"/todo-lists\", {title: titleTask})\r\n    },\r\n\r\n    deleteTask (id) {\r\n        return instance.delete(`/todo-lists/${id}`)\r\n    },\r\n\r\n    updateTitleTask (id, newTitleTask) {\r\n        return instance.put(`/todo-lists/${id}`, {title: newTitleTask})\r\n    },\r\n\r\n    // login (email, password) {\r\n    //     return instance.post(`/auth/login`, {email, password})\r\n    // }\r\n}\r\n\r\n// api.login( 'free@samuraijs.com', 'free')","import {api} from \"../api/api\";\r\n\r\nlet initialState = {\r\n    tasks: []\r\n}\r\n\r\nconst GET_TASKS = 'GET_TASKS';\r\nconst PUT_TASKS = 'PUT_TASKS';\r\nconst DELETE_TASKS = 'DELETE_TASKS';\r\nconst SET_TASKS = 'SET_TASKS';\r\n\r\nconst taskReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_TASKS:\r\n            return {\r\n                ...state,\r\n                tasks: action.getTasks\r\n            }\r\n\r\n        case PUT_TASKS:\r\n            return {\r\n                ...state,\r\n                tasks: state.tasks.map(t => {\r\n                    if (t.id !== action.id) return t\r\n                    return {...t, title: action.newTitleTask}\r\n                })\r\n            }\r\n\r\n        case DELETE_TASKS: {\r\n            return {\r\n                ...state,\r\n                tasks: state.tasks.filter(item => item.id !== action.id)\r\n            }\r\n        }\r\n\r\n        case SET_TASKS: {\r\n            return {\r\n                ...state,\r\n                tasks: [...action.tasks]\r\n            }\r\n        }\r\n    }\r\n    return state;\r\n}\r\n\r\nexport const getTask = (getTasks) => ({type: GET_TASKS, getTasks});\r\nexport const putTask = (id, newTitleTask) => ({type: PUT_TASKS, id, newTitleTask});\r\nexport const deleteTask = (id) => ({type: DELETE_TASKS, id});\r\nexport const setTasks = (tasks) => ({type: SET_TASKS, tasks})\r\n\r\nexport const requestAddTask = (titleTask) => {\r\n    return async (dispatch) => {\r\n        const {data: newTask} = await api.addNewTask(titleTask);\r\n        const {data: taskList} = await api.getTasks();\r\n        dispatch(getTask(taskList));\r\n    }\r\n}\r\n\r\nexport const requestGetTask = () => {\r\n    return async (dispatch) => {\r\n            const data = await api.getTasks();\r\n            dispatch(getTask(data.data));\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const requestPutTask = (id, newTitleTask) => {\r\n    return async (dispatch) => {\r\n        const {data} = await api.updateTitleTask(id, newTitleTask);\r\n        dispatch(putTask(data));\r\n    }\r\n}\r\n\r\nexport const requestDeleteTask = (id) => {\r\n    return async (dispatch) => {\r\n        const {data} = await api.deleteTask(id);\r\n        if (data.resultCode === 0) {\r\n            dispatch(deleteTask(id));\r\n        }\r\n    }\r\n}\r\n\r\nexport default taskReducer;","import styles from \"../body.module.scss\";\r\nimport React, {useRef, useState} from \"react\";\r\nimport {useDrag, useDrop} from \"react-dnd\";\r\nimport {requestDeleteTask, requestGetTask, requestPutTask} from \"../../../redux/task-reducer\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nexport const ListItem = ({id, title, index, exchangeItems}) => {\r\n    const dispatch = useDispatch();\r\n    const [newTitleTask, setNewTitleTask] = useState('');\r\n    const [refactoredId, setRefactoredId] = useState(null);\r\n    const [done, isDone] = useState(false)\r\n\r\n    const deleteTask = (id) => {\r\n        dispatch(requestDeleteTask(id));\r\n    }\r\n\r\n    const updateTitleTask = (id) => {\r\n        dispatch(requestPutTask(id, newTitleTask))\r\n        dispatch(requestGetTask());\r\n        setRefactoredId(null)\r\n    }\r\n\r\n    const ref = useRef(null);\r\n    const [, drop] = useDrop({\r\n        accept: 'listItem',\r\n        hover(item, monitor) {\r\n            if (!ref.current) {\r\n                return;\r\n            }\r\n            const dragIndex = item.index;\r\n            const hoverIndex = index;\r\n            if (dragIndex === hoverIndex) {\r\n                return;\r\n            }\r\n            exchangeItems(dragIndex, hoverIndex);\r\n            item.index = hoverIndex;\r\n        },\r\n    });\r\n\r\n    const [, drag] = useDrag({\r\n        item: {type: 'listItem', id, index},\r\n        collect: (monitor) => ({\r\n            isDragging: monitor.isDragging(),\r\n        }),\r\n    });\r\n    drag(drop(ref));\r\n    return (\r\n        <ul ref={drag(drop(ref))} className={done ? styles.taskDone : styles.task}>\r\n            <div key={id} draggable={true} onClick={() => setRefactoredId(id)} style={{'display': 'flex', 'alignItems': 'center'}}>\r\n                {id === refactoredId ?\r\n                    <input value={newTitleTask} autoFocus={true} onBlur={() => updateTitleTask(id)}\r\n                           onChange={(e) => setNewTitleTask(e.currentTarget.value)}/>\r\n                    : title}\r\n            </div>\r\n            <div className={styles.inputCheckboxInputButton}>\r\n                <input type='checkbox' checked={done} onChange={() => isDone(!done)}/>\r\n                <button className={styles.deleteButton} onClick={() => deleteTask(id)}>X</button>\r\n            </div>\r\n        </ul>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport styles from './TitleTask.module.scss'\r\nimport {useDispatch} from \"react-redux\";\r\nimport {requestAddTask} from \"../../../redux/task-reducer\";\r\n\r\nconst TitleTask = () => {\r\n    const [titleTask, setTitleTask] = useState('');\r\n    const [error, setError] = useState(false)\r\n    const dispatch = useDispatch();\r\n\r\n    const addTask = () => {\r\n        if (titleTask.trim() !== '') {\r\n            dispatch(requestAddTask(titleTask));\r\n            setTitleTask('');\r\n            setError(false)\r\n        } else {\r\n            setError(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.wrapperTitleTask}>\r\n            <div className={styles.wrapperInputErrorMessage}>\r\n                <input className={error ? styles.errorInput : styles.inputTitle} value={titleTask}\r\n                       onChange={(e) => setTitleTask(e.currentTarget.value)}/>\r\n                {error && <span style={{'color': 'red'}}>Ввидите символ!</span>}\r\n            </div>\r\n            <button className={styles.buttonAddTitle} style={{'marginLeft': 50}} onClick={addTask}>add task</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TitleTask;","import React, {useCallback, useEffect} from 'react';\r\nimport styles from './body.module.scss'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {ListItem} from \"./listItem/ListItem\";\r\nimport update from 'immutability-helper';\r\nimport {requestGetTask, setTasks} from \"../../redux/task-reducer\";\r\nimport TitleTask from \"./titleTask/TitleTask\";\r\n\r\nconst Body = () => {\r\n    const dispatch = useDispatch();\r\n    const listToDoes = useSelector(state => state.taskPage.tasks);\r\n\r\n    useEffect(() => {\r\n        dispatch(requestGetTask());\r\n    }, [])\r\n\r\n\r\n    const exchangeItems = useCallback((dragIndex, hoverIndex) => {\r\n        const dragCard = listToDoes[dragIndex];\r\n        dispatch(setTasks(update(listToDoes, {\r\n            $splice: [\r\n                [dragIndex, 1],\r\n                [hoverIndex, 0, dragCard],\r\n            ],\r\n        })));\r\n    }, [listToDoes]);\r\n\r\n    const ListItems = listToDoes.map((item, index)  => <ListItem key={item.id} {...item} index={index} exchangeItems={exchangeItems}/>)\r\n\r\n    return (\r\n        <div className={styles.wrapperBody}>\r\n            <TitleTask/>\r\n            <div className={styles.wrapperTask}>{ListItems}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Body;","import React from \"react\";\nimport styles from './app.module.scss';\nimport Body from \"./components/body/Body\";\nimport {DndProvider} from \"react-dnd\";\nimport {HTML5Backend} from \"react-dnd-html5-backend\";\n\nconst App = () => {\n    return (\n        <div className={styles.wrapperApp}>\n            <DndProvider backend={HTML5Backend}>\n                <Body/>\n            </DndProvider>\n        </div>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport taskReducer from \"./task-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    taskPage: taskReducer\r\n});\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/redux-store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>, document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}