{"version":3,"sources":["components/body/body.module.scss","components/body/titleTask/TitleTask.module.scss","components/body/errorModal/errorModal.module.scss","app.module.scss","api/api.js","redux/task-reducer.js","components/body/listItem/ListItem.jsx","components/body/titleTask/TitleTask.jsx","components/body/errorModal/ErrorModal.js","components/body/Body.jsx","App.jsx","reportWebVitals.js","redux/redux-store.js","index.js"],"names":["module","exports","instance","axios","create","baseURL","withCredentials","headers","api","get","titleTask","post","title","id","delete","newTitleTask","put","email","password","initialState","tasks","messageError","GET_TASKS","PUT_TASKS","DELETE_TASKS","SET_TASKS","SET_ERROR_MESSAGE","getTask","getTasks","type","putTask","deleteTask","setErrorMessage","errorMessage","requestGetTask","dispatch","a","data","message","taskReducer","state","action","map","t","filter","item","ListItem","index","exchangeItems","useDispatch","useState","setNewTitleTask","refactoredId","setRefactoredId","done","isDone","resultCode","requestDeleteTask","updateTitleTask","requestPutTask","ref","useRef","useDrop","accept","hover","monitor","current","dragIndex","hoverIndex","drop","useDrag","collect","isDragging","drag","className","styles","taskDone","task","draggable","onClick","style","value","autoFocus","onBlur","onChange","e","currentTarget","inputCheckboxInputButton","checked","deleteButton","TitleTask","setTitleTask","error","setError","wrapperTitleTask","wrapperInputErrorMessage","errorInput","inputTitle","buttonAddTitle","trim","taskList","requestAddTask","ErrorModal","wrapperErrorModal","addOkButton","Body","listToDoes","useSelector","taskPage","useEffect","useCallback","dragCard","update","$splice","ListItems","wrapperBody","length","wrapperTask","App","wrapperApp","DndProvider","backend","HTML5Backend","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.36971ce3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperBody\":\"body_wrapperBody__3qt1z\",\"wrapperTask\":\"body_wrapperTask__1mjWT\",\"task\":\"body_task__VnKp5\",\"taskDone\":\"body_taskDone__vTfVp\",\"inputCheckboxInputButton\":\"body_inputCheckboxInputButton__WMJNs\",\"deleteButton\":\"body_deleteButton__2j6R8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperTitleTask\":\"TitleTask_wrapperTitleTask__3gZgc\",\"wrapperInputErrorMessage\":\"TitleTask_wrapperInputErrorMessage__Er3eV\",\"inputTitle\":\"TitleTask_inputTitle__3MQWf\",\"errorInput\":\"TitleTask_errorInput__hlgNC\",\"errorMessage\":\"TitleTask_errorMessage__2s77e\",\"buttonAddTitle\":\"TitleTask_buttonAddTitle__28n0k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperErrorModal\":\"errorModal_wrapperErrorModal__29ALo\",\"addOkButton\":\"errorModal_addOkButton__24O4q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperApp\":\"app_wrapperApp__pn1Zb\"};","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.1\",\r\n    withCredentials: true,\r\n    headers: {\"API-KEY\": \"3af6bfa5-65e5-4eec-88f6-fc8f87e12121\"}\r\n});\r\n\r\nexport const api = {\r\n    getTasks () {\r\n        return instance.get(\"/todo-lists\")\r\n    },\r\n\r\n    addNewTask (titleTask) {\r\n        return instance.post(\"/todo-lists\", {title: titleTask})\r\n    },\r\n\r\n    deleteTask (id) {\r\n        return instance.delete(`/todo-lists/${id}`)\r\n    },\r\n\r\n    updateTitleTask (id, newTitleTask) {\r\n        return instance.put(`/todo-lists/${id}`, {title: newTitleTask})\r\n    },\r\n\r\n    login (email, password) {\r\n        return instance.post(`/auth/login`, {email, password})\r\n    }\r\n}\r\n\r\napi.login( 'free@samuraijs.com', 'free')","import {api} from \"../api/api\";\r\n\r\nlet initialState = {\r\n    tasks: [],\r\n    messageError: '',\r\n}\r\n\r\nconst GET_TASKS = 'GET_TASKS';\r\nconst PUT_TASKS = 'PUT_TASKS';\r\nconst DELETE_TASKS = 'DELETE_TASKS';\r\nconst SET_TASKS = 'SET_TASKS';\r\nconst SET_ERROR_MESSAGE = 'SET_ERROR_MESSAGE';\r\n\r\nconst taskReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_TASKS:\r\n            return {\r\n                ...state,\r\n                tasks: action.getTasks\r\n            }\r\n\r\n        case PUT_TASKS:\r\n            return {\r\n                ...state,\r\n                tasks: state.tasks.map(t => {\r\n                    if (t.id !== action.id) return t\r\n                    return {...t, title: action.newTitleTask}\r\n                })\r\n            }\r\n\r\n        case DELETE_TASKS: {\r\n            return {\r\n                ...state,\r\n                tasks: state.tasks.filter(item => item.id !== action.id)\r\n            }\r\n        }\r\n\r\n        case SET_TASKS: {\r\n            return {\r\n                ...state,\r\n                tasks: [...action.tasks]\r\n            }\r\n        }\r\n\r\n        case SET_ERROR_MESSAGE: {\r\n            return {\r\n                ...state,\r\n                messageError: action.errorMessage\r\n            }\r\n        }\r\n    }\r\n    return state;\r\n}\r\n\r\nexport const getTask = (getTasks) => ({type: GET_TASKS, getTasks});\r\nexport const putTask = (id, newTitleTask) => ({type: PUT_TASKS, id, newTitleTask});\r\nexport const deleteTask = (id) => ({type: DELETE_TASKS, id});\r\nexport const setTasks = (tasks) => ({type: SET_TASKS, tasks})\r\nexport const setErrorMessage = (errorMessage) => ({type: SET_ERROR_MESSAGE, errorMessage})\r\n\r\nexport const requestAddTask = (titleTask) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const {data: newTask} = await api.addNewTask(titleTask);\r\n            const {data: taskList} = await api.getTasks();\r\n            dispatch(getTask(taskList));\r\n        } catch (error) {\r\n            dispatch(setErrorMessage(error.message));\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const requestGetTask = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const data = await api.getTasks();\r\n            dispatch(getTask(data.data));\r\n        } catch (error) {\r\n            dispatch(setErrorMessage(error.message));\r\n        }\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const requestPutTask = (id, newTitleTask) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const {data} = await api.updateTitleTask(id, newTitleTask);\r\n            dispatch(putTask(data));\r\n        } catch (error) {\r\n            dispatch(setErrorMessage(error.message));\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const requestDeleteTask = (id) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const {data} = await api.deleteTask(id);\r\n            if (data.resultCode === 0) {\r\n                dispatch(deleteTask(id));\r\n            }\r\n        } catch (error) {\r\n            dispatch(setErrorMessage(error.message));\r\n        }\r\n    }\r\n}\r\n\r\nexport default taskReducer;","import styles from \"../body.module.scss\";\r\nimport React, {useRef, useState} from \"react\";\r\nimport {useDrag, useDrop} from \"react-dnd\";\r\nimport {requestDeleteTask, requestGetTask, requestPutTask} from \"../../../redux/task-reducer\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nexport const ListItem = ({id, title, index, exchangeItems}) => {\r\n    const dispatch = useDispatch();\r\n    const [newTitleTask, setNewTitleTask] = useState('');\r\n    const [refactoredId, setRefactoredId] = useState(null);\r\n    const [done, isDone] = useState(false)\r\n\r\n    const deleteTask = (id) => {\r\n        dispatch(requestDeleteTask(id));\r\n    }\r\n\r\n    const updateTitleTask = (id) => {\r\n        dispatch(requestPutTask(id, newTitleTask))\r\n        dispatch(requestGetTask());\r\n        setRefactoredId(null)\r\n    }\r\n\r\n    const ref = useRef(null);\r\n    const [, drop] = useDrop({\r\n        accept: 'listItem',\r\n        hover(item, monitor) {\r\n            if (!ref.current) {\r\n                return;\r\n            }\r\n            const dragIndex = item.index;\r\n            const hoverIndex = index;\r\n            if (dragIndex === hoverIndex) {\r\n                return;\r\n            }\r\n            exchangeItems(dragIndex, hoverIndex);\r\n            item.index = hoverIndex;\r\n        },\r\n    });\r\n\r\n    const [, drag] = useDrag({\r\n        item: {type: 'listItem', id, index},\r\n        collect: (monitor) => ({\r\n            isDragging: monitor.isDragging(),\r\n        }),\r\n    });\r\n    drag(drop(ref));\r\n    return (\r\n        <ul ref={drag(drop(ref))} className={done ? styles.taskDone : styles.task}>\r\n            <div key={id} draggable={true} onClick={() => setRefactoredId(id)} style={{'display': 'flex', 'alignItems': 'center'}}>\r\n                {id === refactoredId ?\r\n                    <input value={newTitleTask} autoFocus={true} onBlur={() => updateTitleTask(id)}\r\n                           onChange={(e) => setNewTitleTask(e.currentTarget.value)}/>\r\n                    : title}\r\n            </div>\r\n            <div className={styles.inputCheckboxInputButton}>\r\n                <input type='checkbox' checked={done} onChange={() => isDone(!done)}/>\r\n                <button className={styles.deleteButton} onClick={() => deleteTask(id)}>X</button>\r\n            </div>\r\n        </ul>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport styles from './TitleTask.module.scss'\r\nimport {useDispatch} from \"react-redux\";\r\nimport {requestAddTask} from \"../../../redux/task-reducer\";\r\n\r\nconst TitleTask = () => {\r\n    const [titleTask, setTitleTask] = useState('');\r\n    const [error, setError] = useState(false)\r\n    const dispatch = useDispatch();\r\n\r\n    const addTask = () => {\r\n        if (titleTask.trim() !== '') {\r\n            dispatch(requestAddTask(titleTask));\r\n            setTitleTask('');\r\n            setError(false)\r\n        } else {\r\n            setError(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.wrapperTitleTask}>\r\n            <div className={styles.wrapperInputErrorMessage}>\r\n                <input className={error ? styles.errorInput : styles.inputTitle} value={titleTask}\r\n                       onChange={(e) => setTitleTask(e.currentTarget.value)}/>\r\n                {error && <span style={{'color': 'red'}}>Ввидите символ!</span>}\r\n            </div>\r\n            <button className={styles.buttonAddTitle} style={{'marginLeft': 50}} onClick={addTask}>add task</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TitleTask;","import React from \"react\";\r\nimport styles from './errorModal.module.scss'\r\nimport {setErrorMessage} from \"../../../redux/task-reducer\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nconst ErrorModal = ({errorMessage}) => {\r\n    const dispatch = useDispatch();\r\n    const addOk = () => {\r\n        dispatch(setErrorMessage(''))\r\n    }\r\n\r\n    return (\r\n        <div className={styles.wrapperErrorModal}>\r\n            <h1 style={{'color': 'red'}}>{errorMessage}</h1>\r\n            <button  className={styles.addOkButton} onClick={addOk}>ok</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorModal;","import React, {useCallback, useEffect} from 'react';\r\nimport styles from './body.module.scss'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {ListItem} from \"./listItem/ListItem\";\r\nimport update from 'immutability-helper';\r\nimport {requestGetTask, setTasks} from \"../../redux/task-reducer\";\r\nimport TitleTask from \"./titleTask/TitleTask\";\r\nimport ErrorModal from \"./errorModal/ErrorModal\";\r\n\r\nconst Body = () => {\r\n    const dispatch = useDispatch();\r\n    const listToDoes = useSelector(state => state.taskPage.tasks);\r\n    const errorMessage = useSelector(state => state.taskPage.messageError)\r\n\r\n    useEffect(() => {\r\n        dispatch(requestGetTask());\r\n    }, [])\r\n\r\n\r\n    const exchangeItems = useCallback((dragIndex, hoverIndex) => {\r\n        const dragCard = listToDoes[dragIndex];\r\n        dispatch(setTasks(update(listToDoes, {\r\n            $splice: [\r\n                [dragIndex, 1],\r\n                [hoverIndex, 0, dragCard],\r\n            ],\r\n        })));\r\n    }, [listToDoes]);\r\n\r\n    const ListItems = listToDoes.map((item, index) => <ListItem key={item.id} {...item} index={index}\r\n                                                                exchangeItems={exchangeItems}/>)\r\n\r\n    return (\r\n        <div className={styles.wrapperBody}>\r\n            {errorMessage.length > 1 ? <ErrorModal errorMessage={errorMessage}/> :\r\n                <>\r\n                    <TitleTask/>\r\n                    <div className={styles.wrapperTask}>{ListItems}</div>\r\n                </>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Body;","import React from \"react\";\nimport styles from './app.module.scss';\nimport Body from \"./components/body/Body\";\nimport {DndProvider} from \"react-dnd\";\nimport {HTML5Backend} from \"react-dnd-html5-backend\";\n\nconst App = () => {\n    return (\n        <div className={styles.wrapperApp}>\n            <DndProvider backend={HTML5Backend}>\n                <Body/>\n            </DndProvider>\n        </div>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport taskReducer from \"./task-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    taskPage: taskReducer\r\n});\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/redux-store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>, document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}